////////////////////////////////////////////////////////////////////////////
// 
//   gro 
// 
//   Copyright (c) 2011-2012 Eric Klavins, University of Washington
//   For more information, email klavins@uw.edu
// 
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License
//   as published by the Free Software Foundation; either version 2
//   of the License, or (at your option) any later version.
// 
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
// 
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// 
// 

// Coded by Enrique Valero.
// Program distributed under GNU General Public License v3

include gro

set ( "dt", 0.1 );

// Counting of the number of predators and preys
n_predator := 4;
n_prey := 4;

// Initialize the simulation parameters
diffusion_rate := 2;      // signal diffusion rate
degradation_rate := 0.01;   // signal degradation rate
emission_rate := 0.05;    // signal emission rate

// Prey and Predator signals
LasI := signal( diffusion_rate, degradation_rate );  //Emitted by the predator
LuxI := signal( diffusion_rate, degradation_rate );  // Emitted by the prey

program predator() := {
	daughter : { n_predator := n_predator + 1};
	rfp:=0;
	rate(emission_rate) : {
		emit_signal(LasI, 1000);
	};
	rate((1-get_signal(LuxI)*(1/10.1))^9) & n_predator > 0 : {
		die();
		n_predator := n_predator - 1;
	};
	true : {
		rfp := 1000;
	};
	selected : {
		print(get_signal(LuxI));
	}
};

program prey() := {
	daughter : {n_prey := n_prey + 1};
	gfp:=0;
	rate(emission_rate) : {
		emit_signal(LuxI, 1000);
	};
	rate((get_signal(LasI)*0.5)^9) & n_prey > 0 : {
		die();
		n_prey := n_prey - 1;
	};
	true : {
		gfp := 1000;
	};
};

program main() := {
	ecoli ( [], program predator() );	
	ecoli ( [], program predator() );
	ecoli ( [], program predator() );
	ecoli ( [], program predator() );
	ecoli ( [], program predator() );
	ecoli ( [], program prey() );
	ecoli ( [], program prey() );
	ecoli ( [], program prey() );
	ecoli ( [], program prey() );
	ecoli ( [], program prey() );
};